// If you set 'vertical-align: middle' in an inline element whose parent is a block,
// the parent will have a crack in between itself and the inline child.
@use 'sass:color' as color;
@use 'variables' as *;

* {
	font: inherit;
	text-transform: none;
	line-height: inherit;

	margin: 0;
	padding: 0;
	border-width: 0;
	outline-width: 0;

	background-color: transparent;
	color: inherit;
	overflow: hidden;
	cursor: inherit;
}
:hover {
	outline: none;
}
*, *::before, *::after {
	box-sizing: border-box;
}
:not(:defined) {
    display: none;
}

html {
	font-size: $font-size;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
	font-weight: normal;

	line-height: $line-height;

	--hover-color: #{getHoverColor($background-color)};
	background-color: $background-color;
	color: $color; // rgba($color, $primary-alpha);

	-moz-osx-font-smoothing: grayscale;
	 -webkit-font-smoothing: antialiased;
	/* Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS. */
	-webkit-text-size-adjust: 100%;
	    -ms-text-size-adjust: 100%;
}

code {
	font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

body {
    height: 100vh;
}

#app {
	height: 100%;
}

iframe, header, footer, main,
article, section, aside,
form, figure, figcaption {
	display: flow-root;
}

figure {
	margin: 1em 2.85em;
}

h1, h2, h3, h4, h5, h6 {
	margin: 1.5em 0 2.5em 0;
}
@for $level from 1 through 6 {
	h#{$level} {
		font-size: 4rem - ($level - 1) * 0.5;
	}
}

ul {
	list-style-type: none;
}

li {
	margin: $li-margin;
}

a {
	display: inline-flex;
	align-items: center;
	cursor: pointer;
	text-decoration: none;
}

button {
	position: relative;
    display: inline-flex;
	padding-left: (1em * $widget-line-height - $icon-size) / 2;
	padding-right: (1em * $widget-line-height - $icon-size) / 2;
	border-radius: $border-radius;

	        appearance: none;
	-webkit-appearance: none;

	&.round {
		$round-subtract: .2;
        font-size: #{1 - $round-subtract}em;
		// The 1em of margin is different to the 1em in font-size as the font-size will have been changed,
		// so divide it with the same proportion of the font-size.
		margin: 1em / (1 - $round-subtract) * $round-subtract * $widget-line-height / 2;

		border-radius: 50%;

        background-color: $background-shaded-color;
	}
	@include button;
	& > span {
		display: inline-block;
		padding-top: 1em * ($widget-line-height - $line-height) / 2;
		padding-bottom: 1em * ($widget-line-height - $line-height) / 2;
	}
}